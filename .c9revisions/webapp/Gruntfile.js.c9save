{"ts":1362387127346,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Generate the files, copy to the debug folder. Run require optimizer in debug, send to release folder\n// Generated on 2013-03-02 using generator-webapp 0.1.5\n'use strict';\nvar lrSnippet = require('grunt-contrib-livereload/lib/utils').livereloadSnippet;\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n    // load all grunt tasks\n    require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);\n\n    // configurable paths\n    var yeomanConfig = {\n        app: 'app',\n        dist: 'debug'\n    };\n\n    grunt.initConfig({\n        yeoman: yeomanConfig,\n        watch: {\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/**/*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            livereload: {\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '{.tmp,<%= yeoman.app %>}/styles/{,*/}*.css',\n                    '{.tmp,<%= yeoman.app %>}/scripts/{,*/}*.js',\n                    '<%= yeoman.app %>/img/{,*/}*.{png,jpg,jpeg,webp}'\n                ],\n                tasks: ['livereload']\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            lrSnippet,\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'app')\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test')\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, 'dist')\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n        clean: {\n            dist: ['.tmp', '<%= yeoman.dist %>/*'],\n            server: '.tmp'\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/**/*.js',\n                '!<%= yeoman.app %>/scripts/vendor/**/*.js',\n                '!<%= yeoman.app %>/scripts/text.js',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n        coffee: {\n            dist: {\n                files: [{\n                    // rather than compiling multiple files here you should\n                    // require them into your main .coffee file\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/scripts',\n                    src: '**/*.coffee',\n                    dest: '<%= yeoman.dist %>/scripts',\n                    ext: '.js'\n                }]\n            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: '.tmp/spec',\n                    src: '*.coffee',\n                    dest: 'test/spec'\n                }]\n            }\n        },\n        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n        requirejs: {\n            dist: {\n                options: {\n\t\t\t\t\tbaseUrl: 'scripts/',\n\t\t\t\t\tappDir: 'debug/',\n\t\t\t\t\tmainConfigFile: 'debug/scripts/main.js',\n\t\t\t\t\toptimize: 'uglify2',\n\t\t\t\t\toptimizeCss: 'standard.keepLines',\n\t\t\t\t\tdir: 'release',\n\t\t\t\t\tmodules: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'main',\n\t\t\t\t\t\t\texclude: [\n\t\t\t\t\t\t\t\t'jquery',\n\t\t\t\t\t\t\t\t'mustache'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'modules/Ingredients/Calculator',\n\t\t\t\t\t\t\texclude: [\n\t\t\t\t\t\t\t\t'jquery',\n\t\t\t\t\t\t\t\t'mustache',\n\t\t\t\t\t\t\t\t'underscore',\n\t\t\t\t\t\t\t\t'vendor/flight/lib/component'\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tremoveCombined: false,\n\t\t\t\t\tstubModules: [\n\t\t\t\t\t\t'text'\n\t\t\t\t\t],\n\t\t\t\t\tpreserveLicenseComments: false,\n\t\t\t\t\tuseStrict: true,\n\t\t\t\t\twrap: true\n\t\t\t\t}\n\n            }\n        },\n        useminPrepare: {\n            html: '<%= yeoman.app %>/index.html',\n            options: {\n                dest: '<%= yeoman.dist %>'\n            }\n        },\n        usemin: {\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n            }\n        },\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/img',\n                    src: '{,*/}*.{png,jpg,jpeg}',\n                    dest: '<%= yeoman.dist %>/img'\n                }]\n            }\n        },\n        cssmin: {\n            dist: {\n                files: {\n                    '<%= yeoman.dist %>/styles/output.css': [\n                        '.tmp/styles/{,*/}*.css',\n                        '<%= yeoman.app %>/styles/**/*.css'\n                    ]\n                }\n            }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        'scripts/**',\n                        'img/**',\n                        'styles/**',\n                        '!scripts/**/*.coffee'\n                    ]\n                }]\n            }\n        },\n        bower: {\n            all: {\n                rjsConfig: '<%= yeoman.app %>/scripts/main.js'\n            }\n        }\n    });\n\n    grunt.renameTask('regarde', 'watch');\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'coffee:dist',\n            'livereload-start',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'coffee',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'coffee',\n\t\t'imagemin',\n        'copy',\n        'requirejs'\n    ]);\n\n    grunt.registerTask('default', [\n        'jshint',\n        'test',\n        'build'\n    ]);\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":8255}]],"length":8255}
{"contributors":[],"silentsave":false,"ts":1362387142079,"patch":[[{"diffs":[[-1,"//Generate the files, copy to the debug folder. Run require optimizer in debug, send to release folder\n// Generated on 2013-03-02 using generator-webapp 0.1.5\n'use strict';\nvar lrSnippet = require('grunt-contrib-livereload/lib/utils').livereloadSnippet;\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to match all subfolders:\n// 'test/spec/**/*.js'\n\n"],[0,"modu"]],"start1":0,"start2":0,"length1":538,"length2":4}]],"length":7721,"saved":false}
{"ts":1362387170107,"patch":[[{"diffs":[[0,"ig,\n"],[-1,"        watch: {\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/**/*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            livereload: {\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '{.tmp,<%= yeoman.app %>}/styles/{,*/}*.css',\n                    '{.tmp,<%= yeoman.app %>}/scripts/{,*/}*.js',\n                    '<%= yeoman.app %>/img/{,*/}*.{png,jpg,jpeg,webp}'\n                ],\n                tasks: ['livereload']\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            lrSnippet,\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'app')\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test')\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, 'dist')\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n"],[0,"    "]],"start1":289,"start2":289,"length1":2002,"length2":8},{"diffs":[[0," },\n"],[-1,"        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n"],[0,"    "]],"start1":772,"start2":772,"length1":231,"length2":8}]],"length":5504,"saved":false}
{"ts":1362387186533,"patch":[[{"diffs":[[0," }]\n"],[-1,"            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: '.tmp/spec',\n                    src: '*.coffee',\n                    dest: 'test/spec'\n                }]\n"],[0,"    "]],"start1":1210,"start2":1210,"length1":235,"length2":8}]],"length":5277,"saved":false}
{"ts":1362387201381,"patch":[[{"diffs":[[0," },\n"],[-1,"        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n"],[0,"    "]],"start1":1235,"start2":1235,"length1":154,"length2":8},{"diffs":[[0,"\t}\n\n"],[-1,"            }\n        },\n        useminPrepare: {\n            html: '<%= yeoman.app %>/index.html',\n            options: {\n                dest: '<%= yeoman.dist %>'\n            }\n        },\n        usemin: {\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n"],[0,"    "]],"start1":1950,"start2":1950,"length1":398,"length2":8}]],"length":4741,"saved":false}
{"ts":1362387213738,"patch":[[{"diffs":[[0," },\n"],[-1,"        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n"],[0,"    "]],"start1":2570,"start2":2570,"length1":792,"length2":8}]],"length":3957,"saved":false}
{"ts":1362387241951,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        },\n        bower: {\n            all: {\n                rjsConfig: '<%= yeoman.app %>/scripts/main.js'\n            }\n"],[0,"    "]],"start1":3029,"start2":3029,"length1":132,"length2":8}]],"length":3833,"saved":false}
{"ts":1362387257167,"patch":[[{"diffs":[[0,");\n\n"],[-1,"    grunt.renameTask('regarde', 'watch');\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'coffee:dist',\n            'livereload-start',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'coffee',\n        'connect:test',\n        'mocha'\n    ]);\n\n"],[0,"    "]],"start1":3048,"start2":3048,"length1":559,"length2":8},{"diffs":[[0,"t',\n"],[-1,"        'test',\n"],[0,"    "]],"start1":3235,"start2":3235,"length1":24,"length2":8}]],"length":3266,"saved":false}
{"ts":1362387260208,"patch":[[{"diffs":[[0,"  ]);\n};"],[-1,"\n"]],"start1":3257,"start2":3257,"length1":9,"length2":8}]],"length":3265,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362388260081,"patch":[[{"diffs":[[1,"'use strict';\n"],[0,"module.expor"]],"start1":0,"start2":0,"length1":12,"length2":26}]],"length":3279,"saved":false}

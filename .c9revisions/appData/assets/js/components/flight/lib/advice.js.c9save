{"ts":1361600404387,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// ==========================================\n// Copyright 2013 Twitter, Inc\n// Licensed under The MIT License\n// http://opensource.org/licenses/MIT\n// ==========================================\n\n\"use strict\";\n\ndefine(\n\n  [\n    './utils',\n    './compose'\n  ],\n\n  function (util, compose) {\n\n    var advice = {\n\n      around: function(base, wrapped) {\n        return function() {\n          var args = util.toArray(arguments);\n          return wrapped.apply(this, [base.bind(this)].concat(args));\n        }\n      },\n\n      before: function(base, before) {\n        return this.around(base, function() {\n          var args = util.toArray(arguments),\n              orig = args.shift(),\n              beforeFn;\n\n          beforeFn = (typeof before == 'function') ? before : before.obj[before.fnName];\n          beforeFn.apply(this, args);\n          return (orig).apply(this, args);\n        });\n      },\n\n      after: function(base, after) {\n        return this.around(base, function() {\n          var args = util.toArray(arguments),\n              orig = args.shift(),\n              afterFn;\n\n          // this is a separate statement for debugging purposes.\n          var res = (orig.unbound || orig).apply(this, args);\n\n          afterFn = (typeof after == 'function') ? after : after.obj[after.fnName];\n          afterFn.apply(this, args);\n          return res;\n        });\n      },\n\n      // a mixin that allows other mixins to augment existing functions by adding additional\n      // code before, after or around.\n      withAdvice: function() {\n        ['before', 'after', 'around'].forEach(function(m) {\n          this[m] = function(method, fn) {\n\n            compose.unlockProperty(this, method, function() {\n              if (typeof this[method] == 'function') {\n                return this[method] = advice[m](this[method], fn);\n              } else {\n                return this[method] = fn;\n              }\n            });\n\n          };\n        }, this);\n      }\n    };\n\n    return advice;\n  }\n);\n"]],"start1":0,"start2":0,"length1":0,"length2":2002}]],"length":2002}

var util=require("util"),_=require("underscore");_.str=require("underscore.string");var Action=require("../action"),$$=require("../const"),argumentErrorHelper=require("../argument/error"),ChoicesPseudoAction=function(e,t){var n={optionStrings:[],dest:e,help:t};Action.call(this,n)};util.inherits(ChoicesPseudoAction,Action);var ActionSubparsers=module.exports=function ActionSubparsers(e){e=e||{},e.dest=e.dest||$$.SUPPRESS,e.nargs=$$.PARSER,this.debug=e.debug===!0,this._progPrefix=e.prog,this._parserClass=e.parserClass,this._nameParserMap={},this._choicesActions=[],e.choices=this._nameParserMap,Action.call(this,e)};util.inherits(ActionSubparsers,Action),ActionSubparsers.prototype.addParser=function(e,t){var n,r=this;t=t||{},t.debug=this.debug===!0,t.prog||(t.prog=this._progPrefix+" "+e);var i=t.aliases||[];if(t.help||_.isString(t.help)){var o=t.help;delete t.help;var a=new ChoicesPseudoAction(e,o);this._choicesActions.push(a)}return n=new this._parserClass(t),this._nameParserMap[e]=n,i.forEach(function(e){r._nameParserMap[e]=n}),n},ActionSubparsers.prototype._getSubactions=function(){return this._choicesActions},ActionSubparsers.prototype.call=function(e,t,n){var r=n[0],i=n.slice(1);if(this.dest!==$$.SUPPRESS&&(t[this.dest]=r),!this._nameParserMap[r])throw argumentErrorHelper(_.str.sprintf('Unknown parser "%(name)s" (choices: [%(choices)s]).',{name:r,choices:_.keys(this._nameParserMap).join(", ")}));e=this._nameParserMap[r],e.parseArgs(i,t)};
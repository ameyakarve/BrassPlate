var assert=require("assert"),ArgumentParser=require("../lib/argparse").ArgumentParser;describe("constant actions",function(){var e,t;beforeEach(function(){e=new ArgumentParser({debug:!0})}),it("storeConst should store constant as given",function(){e.addArgument(["-a"],{action:"storeConst",dest:"answer",help:"store constant",constant:42}),t=e.parseArgs("-a".split(" ")),assert.equal(t.answer,"42")}),it("storeConst should give error if constant not given (or misspelled)",function(){assert.throws(function(){e.addArgument(["-a"],{action:"storeConst",dest:"answer",help:"store constant","const":42})},/constant option is required for storeAction/)}),it("appendConst should append constant as given",function(){e.addArgument(["--str"],{action:"appendConst",dest:"types",help:'append constant "str" to types',constant:"str"}),e.addArgument(["--int"],{action:"appendConst",dest:"types",help:'append constant "int" to types',constant:"int"}),t=e.parseArgs("--str --int".split(" ")),assert.deepEqual(t.types,["str","int"])}),it("appendConst should give error if constant not given (or misspelled)",function(){assert.throws(function(){e.addArgument(["-a"],{action:"appendConst",dest:"answer",help:"store constant","const":42})},/constant option is required for appendAction/)})});
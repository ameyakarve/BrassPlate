var semver=require("semver"),f=require("util").format,jsFiles=["src/js/version.js","src/js/utils.js","src/js/event_target.js","src/js/persistent_storage.js","src/js/request_cache.js","src/js/transport.js","src/js/dataset.js","src/js/input_view.js","src/js/dropdown_view.js","src/js/typeahead_view.js","src/js/typeahead.js"];module.exports=function(e){e.initConfig({pkg:e.file.readJSON("package.json"),buildDir:"dist",banner:["/*!"," * typeahead.js <%= pkg.version %>"," * https://github.com/twitter/typeahead"," * Copyright 2013 Twitter, Inc. and other contributors; Licensed MIT"," */\n\n"].join("\n"),less:{css:{src:"src/css/typeahead.css",dest:"<%= buildDir %>/typeahead.css"},cssmin:{options:{yuicompress:!0},src:"src/css/typeahead.css",dest:"<%= buildDir %>/typeahead.min.css"}},concat:{css:{options:{banner:"<%= banner %>",stripBanners:!0},src:"<%= less.css.dest %>",dest:"<%= less.css.dest %>"},cssmin:{options:{banner:"<%= banner %>",stripBanners:!0},src:"<%= less.cssmin.dest %>",dest:"<%= less.cssmin.dest %>"},js:{src:["src/js/intro.js",jsFiles,"src/js/outro.js"],dest:"<%= buildDir %>/typeahead.js"},jsmin:{src:["src/js/intro.js",jsFiles,"src/js/outro.js"],dest:"<%= buildDir %>/typeahead.min.js"}},sed:{version:{pattern:"%VERSION%",replacement:"<%= pkg.version %>",path:["<%= concat.js.dest %>","<%= concat.jsmin.dest %>"]}},uglify:{options:{banner:"<%= banner %>"},js:{options:{mangle:!1,beautify:!0,compress:!1},src:"<%= concat.js.dest %>",dest:"<%= concat.js.dest %>"},jsmin:{options:{mangle:!0,compress:!0},src:"<%= concat.jsmin.dest %>",dest:"<%= concat.jsmin.dest %>"}},jshint:{options:{jshintrc:".jshintrc"},src:jsFiles,tests:["test/*.js"],gruntfile:["Gruntfile.js"]},watch:{js:{files:jsFiles,tasks:"build:js"},css:{files:"<%= less.css.src %>",tasks:"build:css"}},jasmine:{js:{src:jsFiles,options:{specs:"test/*_spec.js",helpers:"test/helpers/*",vendor:"test/vendor/*"}}},exec:{open_spec_runner:{cmd:"open _SpecRunner.html"},git_fail_if_dirty:{cmd:'test -z "$(git status --porcelain)"'},git_add:{cmd:"git add ."},git_commit:{cmd:function(e){return f('git commit -m "%s"',e)}},git_tag:{cmd:function(e){return f('git tag v%s -am "%s"',e,e)}},git_push:{cmd:"git push && git push --tags"},publish_assets:{cmd:["cp -r <%= buildDir %> typeahead.js","zip -r typeahead.js/typeahead.js.zip typeahead.js","git checkout gh-pages","rm -rf releases/latest","cp -r typeahead.js releases/<%= pkg.version %>","cp -r typeahead.js releases/latest","git add releases/<%= pkg.version %> releases/latest","sed -E -i \"\" 's/v[0-9]+\\.[0-9]+\\.[0-9]+/v<%= pkg.version %>/' index.html","git add index.html",'git commit -m "Add assets for <%= pkg.version %>."',"git push","git checkout -","rm -rf typeahead.js"].join(" && ")}},clean:{dist:"dist"},connect:{server:{options:{port:8888,keepalive:!0}}}}),e.registerTask("release","Ship it.",function(t){var n=e.file.readJSON("package.json");t=semver.inc(n.version,t)||t,(!semver.valid(t)||semver.lte(t,n.version))&&e.fatal("invalid version dummy"),e.task.run(["exec:git_fail_if_dirty","lint","test","manifests:"+t,"build","exec:git_add","exec:git_commit:"+t,"exec:git_tag:"+t,"exec:git_push","exec:publish_assets"])}),e.registerTask("manifests","Update manifests.",function(t){var n=e.util._,r=e.file.readJSON("package.json"),i=e.file.readJSON("component.json"),o=e.file.readJSON("typeahead.js.jquery.json");i=JSON.stringify(n.extend(i,{name:r.name,version:t}),null,2),o=JSON.stringify(n.extend(o,{name:r.name,title:r.name,version:t,author:r.author,description:r.description,keywords:r.keywords,homepage:r.homepage,bugs:r.bugs,maintainers:r.contributors}),null,2),r=JSON.stringify(n.extend(r,{version:t}),null,2),e.file.write("package.json",r),e.file.write("component.json",i),e.file.write("typeahead.js.jquery.json",o)}),e.registerTask("default","build"),e.registerTask("build",["build:js","build:css"]),e.registerTask("build:js",["concat:js","concat:jsmin","sed:version","uglify"]),e.registerTask("build:css",["less","concat:css","concat:cssmin"]),e.registerTask("server","connect:server"),e.registerTask("lint","jshint"),e.registerTask("test","jasmine:js"),e.registerTask("test:browser",["jasmine:js:build","exec:open_spec_runner"]),e.loadNpmTasks("grunt-sed"),e.loadNpmTasks("grunt-exec"),e.loadNpmTasks("grunt-contrib-less"),e.loadNpmTasks("grunt-contrib-watch"),e.loadNpmTasks("grunt-contrib-clean"),e.loadNpmTasks("grunt-contrib-uglify"),e.loadNpmTasks("grunt-contrib-jshint"),e.loadNpmTasks("grunt-contrib-concat"),e.loadNpmTasks("grunt-contrib-connect"),e.loadNpmTasks("grunt-contrib-jasmine")};
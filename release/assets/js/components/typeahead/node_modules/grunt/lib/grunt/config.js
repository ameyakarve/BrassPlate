/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2012 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */

var grunt=require("../grunt"),config=module.exports=function(e,t){return 2===arguments.length?config.set(e,t):config.get(e)};config.data={},config.escape=function(e){return e.replace(/\./g,"\\.")},config.getPropString=function(e){return Array.isArray(e)?e.map(config.escape).join("."):e},config.getRaw=function(e){return e?grunt.util.namespace.get(config.data,config.getPropString(e)):config.data};var propStringTmplRe=/^<%=\s*([a-z0-9_$]+(?:\.[a-z0-9_$]+)*)\s*%>$/i;config.get=function(e){return config.process(config.getRaw(e))},config.process=function(e){return grunt.util.recurse(e,function(e){if("string"!=typeof e)return e;var t,n=e.match(propStringTmplRe);return n&&(t=config.get(n[1]),null!=t)?t:grunt.template.process(e,{data:config.data})})},config.set=function(e,t){return grunt.util.namespace.set(config.data,config.getPropString(e),t)},config.init=function(e){return grunt.verbose.write("Initializing config...").ok(),config.data=e||{}},config.requires=function(){var e=grunt.util.pluralize,t=grunt.util.toArray(arguments).map(config.getPropString),n="Verifying propert"+e(t.length,"y/ies")+" "+grunt.log.wordlist(t)+" exist"+e(t.length,"s")+" in config...";grunt.verbose.write(n);var r=config.data&&t.filter(function(e){return null==config.get(e)}).map(function(e){return'"'+e+'"'});if(config.data&&0===r.length)return grunt.verbose.ok(),!0;throw grunt.verbose.or.write(n),grunt.log.error().error("Unable to process task."),config.data?grunt.util.error("Required config propert"+e(r.length,"y/ies")+" "+r.join(", ")+" missing."):grunt.util.error("Unable to load config.")};
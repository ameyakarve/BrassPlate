/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2012 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */

function isValidMultiTaskTarget(e){return!/^_|^options$/.test(e)}function loadTask(e){loadTaskStack.push(registry),registry={tasks:[],untasks:[],meta:{info:lastInfo,filepath:e}};var t,n=path.basename(e),r='Loading "'+n+'" tasks...',i=0;try{t=require(path.resolve(e)),"function"==typeof t&&t.call(grunt,grunt),grunt.verbose.write(r).ok(),["un",""].forEach(function(e){var t=grunt.util._.chain(registry[e+"tasks"]).uniq().sort().value();t.length>0&&(i++,grunt.verbose.writeln((e?"- ":"+ ")+grunt.log.wordlist(t)))}),0===i&&grunt.verbose.error("No tasks were registered or unregistered.")}catch(o){grunt.log.write(r).error().verbose.error(o.stack).or.error(o)}registry=loadTaskStack.pop()||{}}function loadTasksMessage(e){0===loadTaskDepth&&(lastInfo=e),grunt.verbose.subhead("Registering "+e+" tasks.")}function loadTasks(e){try{var t=grunt.file.glob.sync("*.{js,coffee}",{cwd:e,maxDepth:1});t.forEach(function(t){loadTask(path.join(e,t))})}catch(n){grunt.log.verbose.error(n.stack).or.error(n)}}var grunt=require("../grunt"),path=require("path"),parent=grunt.util.task.create(),task=module.exports=Object.create(parent),registry={tasks:[],untasks:[],meta:{}},lastInfo,loadTaskDepth=0,errorcount;task.registerTask=function(e){registry.tasks.push(e),parent.registerTask.apply(task,arguments);var t=task._tasks[e];t.meta=grunt.util._.clone(registry.meta);var n=t.fn;return t.fn=function(r){errorcount=grunt.fail.errorcount,Object.defineProperty(this,"errorCount",{enumerable:!0,get:function(){return grunt.fail.errorcount-errorcount}}),this.requires=task.requires.bind(task),this.requiresConfig=grunt.config.requires,this.options=function(){var t=[{}].concat(grunt.util.toArray(arguments)).concat([grunt.config([e,"options"])]);return grunt.util._.extend.apply(null,t)};var i=n.alias||t.multi&&(!r||"*"===r)?"verbose":"log";return grunt[i].header('Running "'+this.nameArgs+'"'+(this.name!==this.nameArgs?" ("+this.name+")":"")+" task"),grunt[i].debug("Task source: "+t.meta.filepath),n.apply(this,arguments)},task},task.normalizeMultiTaskFiles=function(e,t){var n,r,i=[];if("object"===grunt.util.kindOf(e))if("src"in e||"dest"in e){r={};for(n in e)"options"!==n&&(r[n]=e[n]);i.push(r)}else if("object"===grunt.util.kindOf(e.files))for(n in e.files)i.push({src:e.files[n],dest:grunt.config.process(n)});else Array.isArray(e.files)&&e.files.forEach(function(e){var t;if("src"in e||"dest"in e)i.push(e);else for(t in e)i.push({src:e[t],dest:grunt.config.process(t)})});else i.push({src:e,dest:grunt.config.process(t)});return 0===i.length?(grunt.verbose.writeln("File: "+"[no files]".red),[]):(i=grunt.util._(i).chain().forEach(function(e){"src"in e&&e.src&&(e.src=Array.isArray(e.src)?grunt.util._.flatten(e.src):[e.src])}).map(function(e){var t=grunt.util._.extend({},e);if(delete t.src,delete t.dest,e.expand)return grunt.file.expandMapping(e.src,e.dest,t).map(function(t){var n=grunt.util._.extend({},e);return n.orig=grunt.util._.extend({},e),n.src=grunt.config.process(t.src),n.dest=grunt.config.process(t.dest),["expand","cwd","flatten","rename","ext"].forEach(function(e){delete n[e]}),n});var n=grunt.util._.extend({},e);return n.orig=grunt.util._.extend({},e),"src"in n&&Object.defineProperty(n,"src",{enumerable:!0,get:function r(){var n;return"result"in r||(n=e.src,n=Array.isArray(n)?grunt.util._.flatten(n):[n],r.result=grunt.file.expand(t,n)),r.result}}),"dest"in n&&(n.dest=e.dest),n}).flatten().value(),grunt.option("verbose")&&i.forEach(function(e){var t=[];"src"in e&&t.push(e.src.length>0?grunt.log.wordlist(e.src):"[no src]".red),"dest"in e&&t.push("-> "+(e.dest?(e.dest+"").cyan:"[no dest]".red)),t.length>0&&grunt.verbose.writeln("Files: "+t.join(" "))}),i)},task.registerMultiTask=function(e,t,n){null==n&&(n=t,t="Custom multi task.");var r;task.registerTask(e,t,function(e){var t=r.name;if(this.args=grunt.util.toArray(arguments).slice(1),!e||"*"===e)return task.runAllTargets(t,this.args);if(!isValidMultiTaskTarget(e))throw Error('Invalid target "'+e+'" specified.');return this.requiresConfig([t,e]),this.options=function(){var n=grunt.config([t,e]),r=[{}].concat(grunt.util.toArray(arguments)).concat([grunt.config([t,"options"]),"object"===grunt.util.kindOf(n)?n.options:{}]);return grunt.util._.extend.apply(null,r)},this.data=grunt.config([t,e]),this.files=task.normalizeMultiTaskFiles(this.data,e),Object.defineProperty(this,"filesSrc",{enumerable:!0,get:function(){return grunt.util._(this.files).chain().pluck("src").flatten().uniq().value()}.bind(this)}),this.target=e,this.flags={},this.args.forEach(function(e){this.flags[e]=!0},this),n.apply(this,this.args)}),r=task._tasks[e],r.multi=!0},task.registerInitTask=function(e,t,n){task.registerTask(e,t,n),task._tasks[e].init=!0},task.renameTask=function(e,t){return registry.untasks.push(e),registry.tasks.push(t),parent.renameTask.apply(task,arguments)},task.runAllTargets=function(e,t){var n=Object.keys(grunt.config.getRaw(e)||{});return 0===n.length?(grunt.log.error('No "'+e+'" targets found.'),!1):(n.filter(isValidMultiTaskTarget).forEach(function(n){task.run([e,n].concat(t||[]).join(":"))}),void 0)};var loadTaskStack=[];task.loadTasks=function(e){loadTasksMessage('"'+e+'"'),grunt.file.exists(e)?loadTasks(e):grunt.log.error('Tasks directory "'+e+'" not found.')},task.loadNpmTasks=function(e){loadTasksMessage('"'+e+'" local Npm module');var t=path.resolve("node_modules"),n=path.join(t,e,"package.json"),r=grunt.file.exists(n)?grunt.file.readJSON(n):{keywords:[]};if(r.keywords&&-1!==r.keywords.indexOf("gruntcollection"))return loadTaskDepth++,Object.keys(r.dependencies).forEach(function(n){var r=grunt.file.findup("node_modules/"+n,{cwd:path.resolve("node_modules",e),nocase:!0});r&&task.loadNpmTasks(path.relative(t,r))}),loadTaskDepth--,void 0;var i=path.join(t,e,"tasks");grunt.file.exists(i)?loadTasks(i):grunt.log.error('Local Npm module "'+e+'" not found. Is it installed?')},task.init=function(e,t){t||(t={});var n=e.length>0&&e.every(function(e){var t=task._taskPlusArgs(e).task;return t&&t.init}),r=n?null:grunt.option("gruntfile")||grunt.file.findup("Gruntfile.{js,coffee}",{nocase:!0}),i='Reading "'+(r?path.basename(r):"???")+'" Gruntfile...';r&&grunt.file.exists(r)?(grunt.verbose.writeln().write(i).ok(),process.chdir(grunt.option("base")||path.dirname(r)),loadTasksMessage("Gruntfile"),loadTask(r)):t.help||n||(grunt.option("gruntfile")?(grunt.log.writeln().write(i).error(),grunt.fatal('Unable to find "'+r+'" Gruntfile.',grunt.fail.code.MISSING_GRUNTFILE)):grunt.option("help")||(grunt.verbose.writeln().write(i).error(),grunt.log.writelns("A valid Gruntfile could not be found. Please see the getting started guide for more information on how to configure grunt: http://gruntjs.com/getting-started"),grunt.fatal("Unable to find Gruntfile.",grunt.fail.code.MISSING_GRUNTFILE))),(grunt.option("npm")||[]).forEach(task.loadNpmTasks),(grunt.option("tasks")||[]).forEach(task.loadTasks)};
var assert=require("assert"),ArgumentParser=require("../lib/argparse").ArgumentParser;describe("sub-commands",function(){var e,t,n,r;beforeEach(function(){e=new ArgumentParser({debug:!0});var t=e.addSubparsers({title:"subcommands",dest:"subcommand_name"});n=t.addParser("c1",{aliases:["co"]}),n.addArgument(["-f","--foo"],{}),n.addArgument(["-b","--bar"],{}),r=t.addParser("c2",{}),r.addArgument(["--baz"],{})}),it("should store command name",function(){t=e.parseArgs("c1 --foo 5".split(" ")),assert.equal(t.subcommand_name,"c1")}),it("should store command arguments",function(){t=e.parseArgs("c1 --foo 5 -b4".split(" ")),assert.equal(t.foo,5),assert.equal(t.bar,4)}),it("should have same behavior for alias and original command",function(){t=e.parseArgs("c1 --foo 5 -b4".split(" "));var n=e.parseArgs("co --foo 5 -b4".split(" "));assert.equal(t.foo,n.foo),assert.equal(t.bar,n.bar)}),it("should have different behavior for different commands",function(){assert.doesNotThrow(function(){e.parseArgs("c1 --foo 5 -b4".split(" "))}),assert.throws(function(){e.parseArgs("c2 --foo 5 -b4".split(" "))}),assert.doesNotThrow(function(){e.parseArgs("c2 --baz 1".split(" "))}),assert.throws(function(){e.parseArgs("c1 --baz 1".split(" "))})}),it('should drop down with "Invalid choice" error if parse unrecognized command',function(){assert.throws(function(){e.parseArgs("command --baz 1".split(" "))},/Invalid choice:/)}),it("should drop down with empty args ('too few arguments' error)",function(){assert.throws(function(){e.parseArgs([])},/too few arguments/)}),it("should support #setDefaults",function(){n.setDefaults({spam:1}),r.setDefaults({eggs:2}),t=e.parseArgs(["c1"]),assert.equal(t.spam,1),assert.strictEqual(t.eggs,void 0),t=e.parseArgs(["c2"]),assert.equal(t.eggs,2),assert.strictEqual(t.spam,void 0)})});
var assert=require("assert"),ArgumentParser=require("../lib/argparse").ArgumentParser;describe("user defined type",function(){var e,t;it("should handle builtin types",function(){e=new ArgumentParser({debug:!0}),e.addArgument(["--eggs"],{type:"int"}),e.addArgument(["spam"],{type:"float"}),t=e.parseArgs(["--eggs=42","42"]),assert.deepEqual(t,{eggs:42,spam:42}),t=e.parseArgs(["1024.675"]),assert.deepEqual(t,{eggs:null,spam:1024.675}),assert.throws(function(){e.parseArgs(["--eggs","a"])},/Invalid int value: a/i)}),it("should handle user-defined type",function(){function n(e){return e}e=new ArgumentParser({debug:!0}),e.addArgument(["-x"],{type:n}),e.addArgument(["spam"],{type:n}),t=e.parseArgs(["a","-x","b"]),assert.deepEqual(t,{x:n("b"),spam:n("a")}),t=e.parseArgs(["-xf","g"]),assert.deepEqual(t,{x:n("f"),spam:n("g")})}),it("should give consistent type errors",function(){function n(e){var t=new Date(e);if((""+t).match("Invalid"))throw new TypeError(""+e+" is not a valid date.");return t}e=new ArgumentParser({debug:!0}),e.addArgument(["-i"],{type:"int",defaultValue:0}),e.addArgument(["-f"],{type:"float",defaultValue:0}),e.addArgument(["-d"],{type:n,defaultValue:new Date(0)}),assert.throws(function(){e.parseArgs(["-f","abc"])},/Invalid float value: abc/i),assert.throws(function(){e.parseArgs(["-i","abc"])},/Invalid int value: abc/i),t=e.parseArgs([]),assert.deepEqual(t,{i:0,f:0,d:new Date(0)}),t=e.parseArgs(["-d","1/1/2012"]),assert.deepEqual(t,{i:0,f:0,d:new Date("1/1/2012")}),assert.throws(function(){e.parseArgs(["-d","13/1/2000"])},/Invalid dateType value: (.*)/i),assert.throws(function(){e.parseArgs(["-d","abc"])},/Invalid dateType value: (.*)/i)}),it("test a user-defined type by registering it",function(){function n(e){var t=new Date(e);if((""+t).match("Invalid"))throw new TypeError(""+e+" is not a valid date.");return t}e=new ArgumentParser({debug:!0}),e.register("type","dateType",n),e.addArgument(["-d"],{type:"dateType"}),t=e.parseArgs(["-d","1/1/2012"]),assert.deepEqual(t,{d:new Date("1/1/2012")}),assert.throws(function(){e.parseArgs(["-d","13/1/2000"])},/Invalid dateType value: (.*)/)}),it("test an anonymous user-defined type",function(){var n=function(e){var t=new Date(e);if((""+t).match("Invalid"))throw new TypeError(""+e+" is not a valid date.");return t};e=new ArgumentParser({debug:!0}),e.addArgument(["-d"],{type:n}),t=e.parseArgs(["-d","1/1/2012"]),assert.deepEqual(t,{d:new Date("1/1/2012")}),assert.throws(function(){e.parseArgs(["-d","abc"])},/Invalid <function> value: abc\nabc is not a valid date/im)})});
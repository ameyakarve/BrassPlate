var Assert=require("assert"),Fs=require("fs"),JsYaml=require("../../lib/js-yaml"),Common=require("../../lib/js-yaml/common"),Nodes=require("../../lib/js-yaml/nodes"),Helper=require("../helper");module.exports={"Test implicit resolver":Helper.functional({dirname:__dirname+"/data",files:[".data",".detect"],test:function(e,t){var n,r;r=JsYaml.compose(Fs.readFileSync(e,"utf8")),n=Fs.readFileSync(t,"utf8").replace(/^[ \s]+|[ \s]+$/g,""),Assert.equal(Common.isInstanceOf(r,Nodes.SequenceNode),!0),Common.each(r.value,function(e){Assert.equal(Common.isInstanceOf(e,Nodes.ScalarNode),!0),Assert.equal(e.tag,n)})}})};